{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\n\nvar useScrollProgressBar = function useScrollProgressBar() {\n  _s();\n\n  return useEffect(function () {\n    var progressBar = document.getElementById(\"dzb-progress-bar\");\n\n    if (progressBar) {\n      // initial progress bar\n      progressBar.style.position = 'fixed';\n      progressBar.style.top = 0;\n      progressBar.style.width = '0%';\n      progressBar.style.zIndex = 999;\n\n      var scrollFunction = function scrollFunction() {\n        var maxHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n        var scrollY = window.scrollY;\n\n        if (scrollY === 0) {\n          progressBar.style.height = '0px';\n        } else {\n          progressBar.style.height = '3px';\n        }\n\n        if (typeof maxHeight === \"number\") {\n          progressBar.style.width = scrollY / maxHeight * 100 + \"%\";\n        }\n      };\n\n      window.addEventListener(\"resize\", scrollFunction);\n      window.addEventListener(\"scroll\", scrollFunction);\n      return function () {\n        window.removeEventListener(\"resize\", scrollFunction);\n        window.removeEventListener(\"scroll\", scrollFunction);\n\n        if (progressBar) {\n          progressBar.style.width = '0px';\n          progressBar.style.height = '0px';\n        }\n      };\n    }\n  }, []);\n};\n\n_s(useScrollProgressBar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useScrollProgressBar;","map":{"version":3,"sources":["/Users/dzb/Desktop/next-js-dzb/hooks/useScrollProgressBar.js"],"names":["useEffect","useScrollProgressBar","progressBar","document","getElementById","style","position","top","width","zIndex","scrollFunction","maxHeight","documentElement","scrollHeight","clientHeight","scrollY","window","height","addEventListener","removeEventListener"],"mappings":";;AACA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAAA;;AACjC,SAAOD,SAAS,CAAC,YAAM;AACrB,QAAME,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAApB;;AAEA,QAAIF,WAAJ,EAAiB;AACf;AACAA,MAAAA,WAAW,CAACG,KAAZ,CAAkBC,QAAlB,GAA6B,OAA7B;AACAJ,MAAAA,WAAW,CAACG,KAAZ,CAAkBE,GAAlB,GAAwB,CAAxB;AACAL,MAAAA,WAAW,CAACG,KAAZ,CAAkBG,KAAlB,GAA0B,IAA1B;AACAN,MAAAA,WAAW,CAACG,KAAZ,CAAkBI,MAAlB,GAA2B,GAA3B;;AAEA,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,YAAMC,SAAS,GAAGR,QAAQ,CAACS,eAAT,CAAyBC,YAAzB,GAAwCV,QAAQ,CAACS,eAAT,CAAyBE,YAAnF;AACA,YAAMC,OAAO,GAAGC,MAAM,CAACD,OAAvB;;AACA,YAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBb,UAAAA,WAAW,CAACG,KAAZ,CAAkBY,MAAlB,GAA2B,KAA3B;AACD,SAFD,MAEO;AACLf,UAAAA,WAAW,CAACG,KAAZ,CAAkBY,MAAlB,GAA2B,KAA3B;AACD;;AACD,YAAI,OAAON,SAAP,KAAqB,QAAzB,EAAmC;AACjCT,UAAAA,WAAW,CAACG,KAAZ,CAAkBG,KAAlB,GAA2BO,OAAO,GAAGJ,SAAX,GAAwB,GAAxB,GAA8B,GAAxD;AACD;AACF,OAXD;;AAYAK,MAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCR,cAAlC;AACAM,MAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCR,cAAlC;AACA,aAAO,YAAM;AACXM,QAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCT,cAArC;AACAM,QAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCT,cAArC;;AACA,YAAIR,WAAJ,EAAiB;AACfA,UAAAA,WAAW,CAACG,KAAZ,CAAkBG,KAAlB,GAA0B,KAA1B;AACAN,UAAAA,WAAW,CAACG,KAAZ,CAAkBY,MAAlB,GAA2B,KAA3B;AACD;AACF,OAPD;AAQD;AACF,GAjCe,EAiCb,EAjCa,CAAhB;AAkCD,CAnCD;;GAAMhB,oB;;AAqCN,eAAeA,oBAAf","sourcesContent":["\nimport { useEffect } from 'react';\n\nconst useScrollProgressBar = () => {\n  return useEffect(() => {\n    const progressBar = document.getElementById(\"dzb-progress-bar\");\n\n    if (progressBar) {\n      // initial progress bar\n      progressBar.style.position = 'fixed';\n      progressBar.style.top = 0;\n      progressBar.style.width = '0%';\n      progressBar.style.zIndex = 999;\n\n      const scrollFunction = () => {\n        const maxHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n        const scrollY = window.scrollY;\n        if (scrollY === 0) {\n          progressBar.style.height = '0px';\n        } else {\n          progressBar.style.height = '3px';\n        }\n        if (typeof maxHeight === \"number\") {\n          progressBar.style.width = (scrollY / maxHeight) * 100 + \"%\";\n        }\n      };\n      window.addEventListener(\"resize\", scrollFunction);\n      window.addEventListener(\"scroll\", scrollFunction);\n      return () => {\n        window.removeEventListener(\"resize\", scrollFunction);\n        window.removeEventListener(\"scroll\", scrollFunction);\n        if (progressBar) {\n          progressBar.style.width = '0px';\n          progressBar.style.height = '0px';\n        }\n      }\n    }\n  }, []);\n};\n\nexport default useScrollProgressBar;"]},"metadata":{},"sourceType":"module"}